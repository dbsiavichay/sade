
package wsInfoSeguridad;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * Este servicio provee servicios de autenticaci&oacute;n de usuarios registrados en el Sistema Acad&eacute;mico Integrado
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-2b01 
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "Seguridad", targetNamespace = "http://academico.espoch.edu.ec/", wsdlLocation = "http://academico.espoch.edu.ec/OAS_Interop/Seguridad.wsdl")
public class Seguridad
    extends Service
{

    private final static URL SEGURIDAD_WSDL_LOCATION;
    private final static WebServiceException SEGURIDAD_EXCEPTION;
    private final static QName SEGURIDAD_QNAME = new QName("http://academico.espoch.edu.ec/", "Seguridad");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://academico.espoch.edu.ec/OAS_Interop/Seguridad.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SEGURIDAD_WSDL_LOCATION = url;
        SEGURIDAD_EXCEPTION = e;
    }

    public Seguridad() {
        super(__getWsdlLocation(), SEGURIDAD_QNAME);
    }

    public Seguridad(WebServiceFeature... features) {
        super(__getWsdlLocation(), SEGURIDAD_QNAME, features);
    }

    public Seguridad(URL wsdlLocation) {
        super(wsdlLocation, SEGURIDAD_QNAME);
    }

    public Seguridad(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SEGURIDAD_QNAME, features);
    }

    public Seguridad(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Seguridad(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SeguridadSoap
     */
    @WebEndpoint(name = "SeguridadSoap")
    public SeguridadSoap getSeguridadSoap() {
        return super.getPort(new QName("http://academico.espoch.edu.ec/", "SeguridadSoap"), SeguridadSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SeguridadSoap
     */
    @WebEndpoint(name = "SeguridadSoap")
    public SeguridadSoap getSeguridadSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://academico.espoch.edu.ec/", "SeguridadSoap"), SeguridadSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns SeguridadHttpGet
     */
    @WebEndpoint(name = "SeguridadHttpGet")
    public SeguridadHttpGet getSeguridadHttpGet() {
        return super.getPort(new QName("http://academico.espoch.edu.ec/", "SeguridadHttpGet"), SeguridadHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SeguridadHttpGet
     */
    @WebEndpoint(name = "SeguridadHttpGet")
    public SeguridadHttpGet getSeguridadHttpGet(WebServiceFeature... features) {
        return super.getPort(new QName("http://academico.espoch.edu.ec/", "SeguridadHttpGet"), SeguridadHttpGet.class, features);
    }

    /**
     * 
     * @return
     *     returns SeguridadHttpPost
     */
    @WebEndpoint(name = "SeguridadHttpPost")
    public SeguridadHttpPost getSeguridadHttpPost() {
        return super.getPort(new QName("http://academico.espoch.edu.ec/", "SeguridadHttpPost"), SeguridadHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SeguridadHttpPost
     */
    @WebEndpoint(name = "SeguridadHttpPost")
    public SeguridadHttpPost getSeguridadHttpPost(WebServiceFeature... features) {
        return super.getPort(new QName("http://academico.espoch.edu.ec/", "SeguridadHttpPost"), SeguridadHttpPost.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SEGURIDAD_EXCEPTION!= null) {
            throw SEGURIDAD_EXCEPTION;
        }
        return SEGURIDAD_WSDL_LOCATION;
    }

}
